=begin
#Upcall API

#A RESTful API (json) to manage your human-powered outbound call campaigns.

OpenAPI spec version: 2
Contact: support@upcall.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for Upcall::ContactsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ContactsApi' do
  before do
    # run before each test
    @instance = Upcall::ContactsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContactsApi' do
    it 'should create an instance of ContactsApi' do
      expect(@instance).to be_instance_of(Upcall::ContactsApi)
    end
  end

  # unit tests for create_contact
  # Add a contact to a campaign
  # Create contact for campaign
  # @param id ID of campaign
  # @param contact Contact data
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :custom_fields If set, custom fields will be displayed in the output
  # @return [InlineResponse2003]
  describe 'create_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_contact
  # Delete contact
  # Delete contact
  # @param id ID of contact to delete
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for fetch_contacts
  # Get contacts for a campaign
  # Fetching contacts for campaign
  # @param id ID of campaign
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Amount of records to return. 25 by default.
  # @option opts [Integer] :start_id Object ID to fetch next page
  # @option opts [Integer] :end_id Object ID to fetch previous page
  # @option opts [String] :first_name Filter. Filter collection by first_name
  # @option opts [String] :last_name Filter. Filter collection by last_name
  # @option opts [String] :company Filter. Filter collection by company
  # @option opts [String] :name Filter. Filter collection by name
  # @option opts [String] :field_id Filter. Filter collection by field_id
  # @option opts [String] :urgency Filter. Filter collection by urgency
  # @option opts [String] :status Filter. Filter collection by status
  # @option opts [String] :phone Filter. Filter collection by phone
  # @option opts [String] :email Filter. Filter collection by email
  # @option opts [String] :sort Sort field. Available fields: last_name, first_name, company, calls.status                              calls.called_at, calls.caller.user.first_name, calls.caller.user.last_name, urgency
  # @option opts [BOOLEAN] :custom_fields If set, custom fields will be displayed in the output
  # @option opts [BOOLEAN] :answers If set, question/answer pairs will be displayed in the output
  # @return [InlineResponse2002]
  describe 'fetch_contacts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for fetch_custom_fields
  # Get custom fields
  # Fetching custom fields for contact
  # @param id ID of contact
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Amount of records to return. 25 by default.
  # @option opts [Integer] :start_id Object ID to fetch next page
  # @option opts [Integer] :end_id Object ID to fetch previous page
  # @return [InlineResponse2006]
  describe 'fetch_custom_fields test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for fetch_specific_contact
  # Get a specific contact
  # Fetch specific contact
  # @param id ID of contact to fetch
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :custom_fields If set, custom fields will be displayed in the output
  # @return [InlineResponse2003]
  describe 'fetch_specific_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_contact
  # Update a contact
  # Update contact
  # @param id ID of contact to update
  # @param contact Contact data
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :custom_fields If set, custom fields will be displayed in the output
  # @return [InlineResponse2003]
  describe 'update_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
