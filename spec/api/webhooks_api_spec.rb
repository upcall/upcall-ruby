=begin
#Upcall API

#A RESTful API (json) to manage your human-powered outbound call campaigns.

OpenAPI spec version: 2
Contact: support@upcall.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for Upcall::WebhooksApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'WebhooksApi' do
  before do
    # run before each test
    @instance = Upcall::WebhooksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WebhooksApi' do
    it 'should create an instance of WebhooksApi' do
      expect(@instance).to be_instance_of(Upcall::WebhooksApi)
    end
  end

  # unit tests for create_webhook
  # Create a new webhook
  # Create webhook
  # @param webhook Webhook data
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2008]
  describe 'create_webhook test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_webhook
  # Delete a webhook
  # Delete webhook
  # @param id ID of webhook
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_webhook test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for fetch_webhook
  # Get a specific webhook
  # Fetch webhook
  # @param id ID of webhook
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2008]
  describe 'fetch_webhook test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for fetch_webhooks
  # Get all webhooks
  # Fetch webhooks
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Amount of records to return. 25 by default.
  # @option opts [Integer] :start_id Object ID to fetch next page
  # @option opts [Integer] :end_id Object ID to fetch previous page
  # @option opts [String] :url Filter. Filter collection by url
  # @option opts [String] :kind Filter. Filter collection by kind
  # @option opts [String] :sort Sort field. Available fields: url, kind
  # @return [InlineResponse2007]
  describe 'fetch_webhooks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_webhook
  # Update a webhook
  # Update webhook
  # @param id ID of webhook
  # @param webhook Webhook data
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2008]
  describe 'update_webhook test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
